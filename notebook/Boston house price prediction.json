{
	"name": "Boston house price prediction",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SampleSpark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "f39895c7-ea0e-4457-ad47-73eb27ad34d8"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"f314ea01-8973-4e6b-b08d-36fdf28364df": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "14.5",
										"1": "1.35472",
										"2": "0.0",
										"3": "8.14",
										"4": "0.0",
										"5": "0.538",
										"6": "6.072",
										"7": "100.0",
										"8": "4.175",
										"9": "4.0",
										"10": "307.0",
										"11": "21.0",
										"12": "376.73",
										"13": "13.04"
									},
									{
										"0": "13.2",
										"1": "1.38799",
										"2": "0.0",
										"3": "8.14",
										"4": "0.0",
										"5": "0.538",
										"6": "5.95",
										"7": "82.0",
										"8": "3.99",
										"9": "4.0",
										"10": "307.0",
										"11": "21.0",
										"12": "232.6",
										"13": "27.71"
									},
									{
										"0": "13.1",
										"1": "1.15172",
										"2": "0.0",
										"3": "8.14",
										"4": "0.0",
										"5": "0.538",
										"6": "5.701",
										"7": "95.0",
										"8": "3.7872",
										"9": "4.0",
										"10": "307.0",
										"11": "21.0",
										"12": "358.77",
										"13": "18.35"
									},
									{
										"0": "13.5",
										"1": "1.61282",
										"2": "0.0",
										"3": "8.14",
										"4": "0.0",
										"5": "0.538",
										"6": "6.096",
										"7": "96.9",
										"8": "3.7598",
										"9": "4.0",
										"10": "307.0",
										"11": "21.0",
										"12": "248.31",
										"13": "20.34"
									},
									{
										"0": "18.9",
										"1": "0.06417",
										"2": "0.0",
										"3": "5.96",
										"4": "0.0",
										"5": "0.499",
										"6": "5.933",
										"7": "68.2",
										"8": "3.3603",
										"9": "5.0",
										"10": "279.0",
										"11": "19.2",
										"12": "396.9",
										"13": "9.68"
									},
									{
										"0": "20.0",
										"1": "0.09744",
										"2": "0.0",
										"3": "5.96",
										"4": "0.0",
										"5": "0.499",
										"6": "5.841",
										"7": "61.4",
										"8": "3.3779",
										"9": "5.0",
										"10": "279.0",
										"11": "19.2",
										"12": "377.56",
										"13": "11.41"
									},
									{
										"0": "21.0",
										"1": "0.08014",
										"2": "0.0",
										"3": "5.96",
										"4": "0.0",
										"5": "0.499",
										"6": "5.85",
										"7": "41.5",
										"8": "3.9342",
										"9": "5.0",
										"10": "279.0",
										"11": "19.2",
										"12": "396.9",
										"13": "8.77"
									},
									{
										"0": "24.7",
										"1": "0.17505",
										"2": "0.0",
										"3": "5.96",
										"4": "0.0",
										"5": "0.499",
										"6": "5.966",
										"7": "30.2",
										"8": "3.8473",
										"9": "5.0",
										"10": "279.0",
										"11": "19.2",
										"12": "393.43",
										"13": "10.13"
									},
									{
										"0": "30.8",
										"1": "0.02763",
										"2": "75.0",
										"3": "2.95",
										"4": "0.0",
										"5": "0.428",
										"6": "6.595",
										"7": "21.8",
										"8": "5.4011",
										"9": "3.0",
										"10": "252.0",
										"11": "18.3",
										"12": "395.63",
										"13": "4.32"
									},
									{
										"0": "34.9",
										"1": "0.03359",
										"2": "75.0",
										"3": "2.95",
										"4": "0.0",
										"5": "0.428",
										"6": "7.024",
										"7": "15.8",
										"8": "5.4011",
										"9": "3.0",
										"10": "252.0",
										"11": "18.3",
										"12": "395.62",
										"13": "1.98"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "target",
										"type": "double"
									},
									{
										"key": "1",
										"name": "f0",
										"type": "double"
									},
									{
										"key": "2",
										"name": "f1",
										"type": "double"
									},
									{
										"key": "3",
										"name": "f2",
										"type": "double"
									},
									{
										"key": "4",
										"name": "f3",
										"type": "double"
									},
									{
										"key": "5",
										"name": "f4",
										"type": "double"
									},
									{
										"key": "6",
										"name": "f5",
										"type": "double"
									},
									{
										"key": "7",
										"name": "f6",
										"type": "double"
									},
									{
										"key": "8",
										"name": "f7",
										"type": "double"
									},
									{
										"key": "9",
										"name": "f8",
										"type": "double"
									},
									{
										"key": "10",
										"name": "f9",
										"type": "double"
									},
									{
										"key": "11",
										"name": "f10",
										"type": "double"
									},
									{
										"key": "12",
										"name": "f11",
										"type": "double"
									},
									{
										"key": "13",
										"name": "f12",
										"type": "double"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"1"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"526fceb1-3f7a-4f84-9ec2-dafd10be562c": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "count",
										"1": "404",
										"2": "404",
										"3": "404",
										"4": "404",
										"5": "404",
										"6": "404",
										"7": "404",
										"8": "404",
										"9": "404",
										"10": "404",
										"11": "404",
										"12": "404",
										"13": "404",
										"14": "404"
									},
									{
										"0": "mean",
										"1": "22.54653465346535",
										"2": "3.4594762623762376",
										"3": "12.387376237623762",
										"4": "11.081386138613857",
										"5": "0.0594059405940594",
										"6": "0.5516482673267324",
										"7": "6.27518811881188",
										"8": "67.38044554455446",
										"9": "3.8675388613861386",
										"10": "9.158415841584159",
										"11": "404.5990099009901",
										"12": "18.460643564356428",
										"13": "355.57777227722704",
										"14": "12.477945544554453"
									},
									{
										"0": "stddev",
										"1": "8.98063883126667",
										"2": "8.963989468570858",
										"3": "24.736107242965968",
										"4": "6.932029021988665",
										"5": "0.23667599606006476",
										"6": "0.11667525810157786",
										"7": "0.6676242752927922",
										"8": "28.53180696580572",
										"9": "2.1454416420989646",
										"10": "8.522028292531425",
										"11": "165.29089358685016",
										"12": "2.1828023015213165",
										"13": "92.50099254507464",
										"14": "7.0415410412239074"
									},
									{
										"0": "min",
										"1": "5.0",
										"2": "0.00632",
										"3": "0.0",
										"4": "0.46",
										"5": "0.0",
										"6": "0.385",
										"7": "3.863",
										"8": "2.9",
										"9": "1.137",
										"10": "1.0",
										"11": "187.0",
										"12": "12.6",
										"13": "2.52",
										"14": "1.73"
									},
									{
										"0": "25%",
										"1": "17.3",
										"2": "0.0795",
										"3": "0.0",
										"4": "5.13",
										"5": "0.0",
										"6": "0.448",
										"7": "5.885",
										"8": "41.9",
										"9": "2.1069",
										"10": "4.0",
										"11": "280.0",
										"12": "17.3",
										"13": "374.68",
										"14": "6.87"
									},
									{
										"0": "50%",
										"1": "21.1",
										"2": "0.2498",
										"3": "0.0",
										"4": "8.56",
										"5": "0.0",
										"6": "0.538",
										"7": "6.172",
										"8": "75.0",
										"9": "3.3175",
										"10": "5.0",
										"11": "330.0",
										"12": "19.0",
										"13": "391.34",
										"14": "11.38"
									},
									{
										"0": "75%",
										"1": "24.8",
										"2": "2.77974",
										"3": "17.5",
										"4": "18.1",
										"5": "0.0",
										"6": "0.624",
										"7": "6.59",
										"8": "94.0",
										"9": "5.2447",
										"10": "8.0",
										"11": "666.0",
										"12": "20.2",
										"13": "395.77",
										"14": "16.3"
									},
									{
										"0": "max",
										"1": "50.0",
										"2": "88.9762",
										"3": "100.0",
										"4": "27.74",
										"5": "1.0",
										"6": "0.871",
										"7": "8.78",
										"8": "100.0",
										"9": "12.1265",
										"10": "24.0",
										"11": "711.0",
										"12": "22.0",
										"13": "396.9",
										"14": "37.97"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "summary",
										"type": "string"
									},
									{
										"key": "1",
										"name": "target",
										"type": "string"
									},
									{
										"key": "2",
										"name": "f0",
										"type": "string"
									},
									{
										"key": "3",
										"name": "f1",
										"type": "string"
									},
									{
										"key": "4",
										"name": "f2",
										"type": "string"
									},
									{
										"key": "5",
										"name": "f3",
										"type": "string"
									},
									{
										"key": "6",
										"name": "f4",
										"type": "string"
									},
									{
										"key": "7",
										"name": "f5",
										"type": "string"
									},
									{
										"key": "8",
										"name": "f6",
										"type": "string"
									},
									{
										"key": "9",
										"name": "f7",
										"type": "string"
									},
									{
										"key": "10",
										"name": "f8",
										"type": "string"
									},
									{
										"key": "11",
										"name": "f9",
										"type": "string"
									},
									{
										"key": "12",
										"name": "f10",
										"type": "string"
									},
									{
										"key": "13",
										"name": "f11",
										"type": "string"
									},
									{
										"key": "14",
										"name": "f12",
										"type": "string"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "count",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"27e781bf-e350-466b-b357-db9cb21dde62": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "5.0",
										"1": {
											"type": 1,
											"values": [
												38.3518,
												0,
												18.1,
												0,
												0.693,
												5.453,
												100,
												1.4896,
												24,
												666,
												20.2,
												396.9,
												30.59
											]
										}
									},
									{
										"0": "5.0",
										"1": {
											"type": 1,
											"values": [
												67.9208,
												0,
												18.1,
												0,
												0.693,
												5.683,
												100,
												1.4254,
												24,
												666,
												20.2,
												384.97,
												22.98
											]
										}
									},
									{
										"0": "6.3",
										"1": {
											"type": 1,
											"values": [
												9.91655,
												0,
												18.1,
												0,
												0.693,
												5.852,
												77.8,
												1.5004,
												24,
												666,
												20.2,
												338.16,
												29.97
											]
										}
									},
									{
										"0": "7.0",
										"1": {
											"type": 1,
											"values": [
												0.18337,
												0,
												27.74,
												0,
												0.609,
												5.414,
												98.3,
												1.7554,
												4,
												711,
												20.1,
												344.05,
												23.97
											]
										}
									},
									{
										"0": "7.0",
										"1": {
											"type": 1,
											"values": [
												45.7461,
												0,
												18.1,
												0,
												0.693,
												4.519,
												100,
												1.6582,
												24,
												666,
												20.2,
												88.27,
												36.98
											]
										}
									},
									{
										"0": "7.2",
										"1": {
											"type": 1,
											"values": [
												16.8118,
												0,
												18.1,
												0,
												0.7,
												5.277,
												98.1,
												1.4261,
												24,
												666,
												20.2,
												396.9,
												30.81
											]
										}
									},
									{
										"0": "7.5",
										"1": {
											"type": 1,
											"values": [
												10.8342,
												0,
												18.1,
												0,
												0.679,
												6.782,
												90.8,
												1.8195,
												24,
												666,
												20.2,
												21.57,
												25.79
											]
										}
									},
									{
										"0": "8.1",
										"1": {
											"type": 1,
											"values": [
												0.20746,
												0,
												27.74,
												0,
												0.609,
												5.093,
												98,
												1.8226,
												4,
												711,
												20.1,
												318.43,
												29.68
											]
										}
									},
									{
										"0": "8.3",
										"1": {
											"type": 1,
											"values": [
												15.8603,
												0,
												18.1,
												0,
												0.679,
												5.896,
												95.4,
												1.9096,
												24,
												666,
												20.2,
												7.68,
												24.39
											]
										}
									},
									{
										"0": "8.4",
										"1": {
											"type": 1,
											"values": [
												11.8123,
												0,
												18.1,
												0,
												0.718,
												6.824,
												76.5,
												1.794,
												24,
												666,
												20.2,
												48.45,
												22.74
											]
										}
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "target",
										"type": "double"
									},
									{
										"key": "1",
										"name": "features",
										"type": "org.apache.spark.ml.linalg.VectorUDT@3bfc3ba7"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"fa1b58a6-b966-4118-8dde-8384e0a79e76": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "5.6",
										"1": {
											"type": 1,
											"values": [
												25.0461,
												0,
												18.1,
												0,
												0.693,
												5.987,
												100,
												1.5888,
												24,
												666,
												20.2,
												396.9,
												26.77
											]
										},
										"2": "12.425912708228282"
									},
									{
										"0": "7.2",
										"1": {
											"type": 1,
											"values": [
												14.2362,
												0,
												18.1,
												0,
												0.693,
												6.343,
												100,
												1.5741,
												24,
												666,
												20.2,
												396.9,
												20.32
											]
										},
										"2": "18.091852927872758"
									},
									{
										"0": "7.2",
										"1": {
											"type": 1,
											"values": [
												18.0846,
												0,
												18.1,
												0,
												0.679,
												6.434,
												100,
												1.8347,
												24,
												666,
												20.2,
												27.25,
												29.05
											]
										},
										"2": "10.427833690739433"
									},
									{
										"0": "7.4",
										"1": {
											"type": 1,
											"values": [
												22.5971,
												0,
												18.1,
												0,
												0.7,
												5,
												89.5,
												1.5184,
												24,
												666,
												20.2,
												396.9,
												31.99
											]
										},
										"2": "6.049765880921164"
									},
									{
										"0": "8.3",
										"1": {
											"type": 1,
											"values": [
												24.8017,
												0,
												18.1,
												0,
												0.693,
												5.349,
												96,
												1.7028,
												24,
												666,
												20.2,
												396.9,
												19.77
											]
										},
										"2": "12.678250802422045"
									},
									{
										"0": "8.8",
										"1": {
											"type": 1,
											"values": [
												20.0849,
												0,
												18.1,
												0,
												0.7,
												4.368,
												91.2,
												1.4395,
												24,
												666,
												20.2,
												285.83,
												30.63
											]
										},
										"2": "3.1938159874185885"
									},
									{
										"0": "9.7",
										"1": {
											"type": 1,
											"values": [
												11.5779,
												0,
												18.1,
												0,
												0.7,
												5.036,
												97,
												1.77,
												24,
												666,
												20.2,
												396.9,
												25.68
											]
										},
										"2": "9.891498518873956"
									},
									{
										"0": "10.5",
										"1": {
											"type": 1,
											"values": [
												22.0511,
												0,
												18.1,
												0,
												0.74,
												5.818,
												92.4,
												1.8662,
												24,
												666,
												20.2,
												391.45,
												22.11
											]
										},
										"2": "12.843366246341741"
									},
									{
										"0": "10.5",
										"1": {
											"type": 1,
											"values": [
												24.3938,
												0,
												18.1,
												0,
												0.7,
												4.652,
												100,
												1.4672,
												24,
												666,
												20.2,
												396.9,
												28.28
											]
										},
										"2": "6.0295799073536145"
									},
									{
										"0": "10.9",
										"1": {
											"type": 1,
											"values": [
												15.8744,
												0,
												18.1,
												0,
												0.671,
												6.545,
												99.1,
												1.5192,
												24,
												666,
												20.2,
												396.9,
												21.08
											]
										},
										"2": "18.936535174381074"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "target",
										"type": "double"
									},
									{
										"key": "1",
										"name": "features",
										"type": "org.apache.spark.ml.linalg.VectorUDT@3bfc3ba7"
									},
									{
										"key": "2",
										"name": "prediction",
										"type": "double"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"2"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"e0193f92-c459-4785-b157-f4b7e73f7d20": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "Spark MLlib - Linear Regression",
										"1": "24.92643840415788",
										"2": "4.992638421131445",
										"3": "0.7510580823593881",
										"4": "3.515918087212872"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "model",
										"type": "string"
									},
									{
										"key": "1",
										"name": "mean_squared_error",
										"type": "double"
									},
									{
										"key": "2",
										"name": "root_mean_squared_error",
										"type": "double"
									},
									{
										"key": "3",
										"name": "R^2",
										"type": "double"
									},
									{
										"key": "4",
										"name": "mean_absolute_error",
										"type": "double"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"1"
									],
									"isStacked": false
								}
							}
						}
					},
					"868d44b2-a177-4040-80ab-bac3a8be1f28": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "5.0",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												100,
												18.1,
												1.4896,
												666,
												24,
												30.59,
												5.453,
												396.9,
												38.3518,
												0.693
											]
										}
									},
									{
										"0": "5.0",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												100,
												18.1,
												1.4254,
												666,
												24,
												22.98,
												5.683,
												384.97,
												67.9208,
												0.693
											]
										}
									},
									{
										"0": "6.3",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												77.8,
												18.1,
												1.5004,
												666,
												24,
												29.97,
												5.852,
												338.16,
												9.91655,
												0.693
											]
										}
									},
									{
										"0": "7.0",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.1,
												98.3,
												27.74,
												1.7554,
												711,
												4,
												23.97,
												5.414,
												344.05,
												0.18337,
												0.609
											]
										}
									},
									{
										"0": "7.0",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												100,
												18.1,
												1.6582,
												666,
												24,
												36.98,
												4.519,
												88.27,
												45.7461,
												0.693
											]
										}
									},
									{
										"0": "7.2",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												98.1,
												18.1,
												1.4261,
												666,
												24,
												30.81,
												5.277,
												396.9,
												16.8118,
												0.7
											]
										}
									},
									{
										"0": "7.5",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												90.8,
												18.1,
												1.8195,
												666,
												24,
												25.79,
												6.782,
												21.57,
												10.8342,
												0.679
											]
										}
									},
									{
										"0": "8.1",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.1,
												98,
												27.74,
												1.8226,
												711,
												4,
												29.68,
												5.093,
												318.43,
												0.20746,
												0.609
											]
										}
									},
									{
										"0": "8.3",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												95.4,
												18.1,
												1.9096,
												666,
												24,
												24.39,
												5.896,
												7.68,
												15.8603,
												0.679
											]
										}
									},
									{
										"0": "8.4",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												76.5,
												18.1,
												1.794,
												666,
												24,
												22.74,
												6.824,
												48.45,
												11.8123,
												0.718
											]
										}
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "target",
										"type": "double"
									},
									{
										"key": "1",
										"name": "features",
										"type": "org.apache.spark.ml.linalg.VectorUDT@3bfc3ba7"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"aed07095-81c2-40ed-b09d-fac20a845c83": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "5.6",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												100,
												18.1,
												1.5888,
												666,
												24,
												26.77,
												5.987,
												396.9,
												25.0461,
												0.693
											]
										},
										"2": "33.079368591308594",
										"3": "33.079368591308594"
									},
									{
										"0": "7.2",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												100,
												18.1,
												1.5741,
												666,
												24,
												20.32,
												6.343,
												396.9,
												14.2362,
												0.693
											]
										},
										"2": "40.372337341308594",
										"3": "40.372337341308594"
									},
									{
										"0": "7.2",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												100,
												18.1,
												1.8347,
												666,
												24,
												29.05,
												6.434,
												27.25,
												18.0846,
												0.679
											]
										},
										"2": "29.140405654907227",
										"3": "29.140405654907227"
									},
									{
										"0": "7.4",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												89.5,
												18.1,
												1.5184,
												666,
												24,
												31.99,
												5,
												396.9,
												22.5971,
												0.7
											]
										},
										"2": "28.2320556640625",
										"3": "28.2320556640625"
									},
									{
										"0": "8.3",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												96,
												18.1,
												1.7028,
												666,
												24,
												19.77,
												5.349,
												396.9,
												24.8017,
												0.693
											]
										},
										"2": "34.082637786865234",
										"3": "34.082637786865234"
									},
									{
										"0": "8.8",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												91.2,
												18.1,
												1.4395,
												666,
												24,
												30.63,
												4.368,
												285.83,
												20.0849,
												0.7
											]
										},
										"2": "26.424739837646484",
										"3": "26.424739837646484"
									},
									{
										"0": "9.7",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												97,
												18.1,
												1.77,
												666,
												24,
												25.68,
												5.036,
												396.9,
												11.5779,
												0.7
											]
										},
										"2": "34.44858169555664",
										"3": "34.44858169555664"
									},
									{
										"0": "10.5",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												92.4,
												18.1,
												1.8662,
												666,
												24,
												22.11,
												5.818,
												391.45,
												22.0511,
												0.74
											]
										},
										"2": "34.5134162902832",
										"3": "34.5134162902832"
									},
									{
										"0": "10.5",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												100,
												18.1,
												1.4672,
												666,
												24,
												28.28,
												4.652,
												396.9,
												24.3938,
												0.7
											]
										},
										"2": "28.64730453491211",
										"3": "28.64730453491211"
									},
									{
										"0": "10.9",
										"1": {
											"type": 0,
											"size": 1073741824,
											"indices": [
												287408178,
												419613213,
												464140333,
												556319843,
												584064458,
												780495775,
												824677867,
												851899283,
												921728202,
												933181289,
												1055634727
											],
											"values": [
												20.2,
												99.1,
												18.1,
												1.5192,
												666,
												24,
												21.08,
												6.545,
												396.9,
												15.8744,
												0.671
											]
										},
										"2": "40.45200729370117",
										"3": "40.45200729370117"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "target",
										"type": "double"
									},
									{
										"key": "1",
										"name": "features",
										"type": "org.apache.spark.ml.linalg.VectorUDT@3bfc3ba7"
									},
									{
										"key": "2",
										"name": "rawPrediction",
										"type": "double"
									},
									{
										"key": "3",
										"name": "prediction",
										"type": "double"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"2"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"261fb002-8d86-44fe-91a0-6377acbfc1fc": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "Spark MLlib - Linear Regression",
										"1": "24.92643840415788",
										"2": "4.992638421131445",
										"3": "0.7510580823593881",
										"4": "3.515918087212872"
									},
									{
										"0": "Vowpal Wabbit",
										"1": "324.95461942303706",
										"2": "18.02649770263312",
										"3": "-2.2453423466969245",
										"4": "16.76088128557392"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "model",
										"type": "string"
									},
									{
										"key": "1",
										"name": "mean_squared_error",
										"type": "double"
									},
									{
										"key": "2",
										"name": "root_mean_squared_error",
										"type": "double"
									},
									{
										"key": "3",
										"name": "R^2",
										"type": "double"
									},
									{
										"key": "4",
										"name": "mean_absolute_error",
										"type": "double"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"1"
									],
									"isStacked": false
								}
							}
						}
					},
					"808b4e2a-aed9-4208-a6fc-c4993d11b905": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "5.6",
										"1": {
											"type": 1,
											"values": [
												25.0461,
												0,
												18.1,
												0,
												0.693,
												5.987,
												100,
												1.5888,
												24,
												666,
												20.2,
												396.9,
												26.77
											]
										},
										"2": "8.299484569945886"
									},
									{
										"0": "7.2",
										"1": {
											"type": 1,
											"values": [
												14.2362,
												0,
												18.1,
												0,
												0.693,
												6.343,
												100,
												1.5741,
												24,
												666,
												20.2,
												396.9,
												20.32
											]
										},
										"2": "10.121720926091578"
									},
									{
										"0": "7.2",
										"1": {
											"type": 1,
											"values": [
												18.0846,
												0,
												18.1,
												0,
												0.679,
												6.434,
												100,
												1.8347,
												24,
												666,
												20.2,
												27.25,
												29.05
											]
										},
										"2": "8.013533609234399"
									},
									{
										"0": "7.4",
										"1": {
											"type": 1,
											"values": [
												22.5971,
												0,
												18.1,
												0,
												0.7,
												5,
												89.5,
												1.5184,
												24,
												666,
												20.2,
												396.9,
												31.99
											]
										},
										"2": "7.449539495962057"
									},
									{
										"0": "8.3",
										"1": {
											"type": 1,
											"values": [
												24.8017,
												0,
												18.1,
												0,
												0.693,
												5.349,
												96,
												1.7028,
												24,
												666,
												20.2,
												396.9,
												19.77
											]
										},
										"2": "9.487400634994824"
									},
									{
										"0": "8.8",
										"1": {
											"type": 1,
											"values": [
												20.0849,
												0,
												18.1,
												0,
												0.7,
												4.368,
												91.2,
												1.4395,
												24,
												666,
												20.2,
												285.83,
												30.63
											]
										},
										"2": "7.4754323630329305"
									},
									{
										"0": "9.7",
										"1": {
											"type": 1,
											"values": [
												11.5779,
												0,
												18.1,
												0,
												0.7,
												5.036,
												97,
												1.77,
												24,
												666,
												20.2,
												396.9,
												25.68
											]
										},
										"2": "8.24097822817968"
									},
									{
										"0": "10.5",
										"1": {
											"type": 1,
											"values": [
												22.0511,
												0,
												18.1,
												0,
												0.74,
												5.818,
												92.4,
												1.8662,
												24,
												666,
												20.2,
												391.45,
												22.11
											]
										},
										"2": "7.896767979323552"
									},
									{
										"0": "10.5",
										"1": {
											"type": 1,
											"values": [
												24.3938,
												0,
												18.1,
												0,
												0.7,
												4.652,
												100,
												1.4672,
												24,
												666,
												20.2,
												396.9,
												28.28
											]
										},
										"2": "7.5362974916226"
									},
									{
										"0": "10.9",
										"1": {
											"type": 1,
											"values": [
												15.8744,
												0,
												18.1,
												0,
												0.671,
												6.545,
												99.1,
												1.5192,
												24,
												666,
												20.2,
												396.9,
												21.08
											]
										},
										"2": "10.11527720279883"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "target",
										"type": "double"
									},
									{
										"key": "1",
										"name": "features",
										"type": "org.apache.spark.ml.linalg.VectorUDT@3bfc3ba7"
									},
									{
										"key": "2",
										"name": "prediction",
										"type": "double"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"2"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"801bed8d-2708-494c-829a-bf96bc9738ee": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "Spark MLlib - Linear Regression",
										"1": "24.92643840415788",
										"2": "4.992638421131445",
										"3": "0.7510580823593881",
										"4": "3.515918087212872"
									},
									{
										"0": "Vowpal Wabbit",
										"1": "324.95461942303706",
										"2": "18.02649770263312",
										"3": "-2.2453423466969245",
										"4": "16.76088128557392"
									},
									{
										"0": "LightGBM",
										"1": "20.04796613915392",
										"2": "4.477495520841302",
										"3": "0.7997796935705608",
										"4": "2.4181816323266268"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "model",
										"type": "string"
									},
									{
										"key": "1",
										"name": "mean_squared_error",
										"type": "double"
									},
									{
										"key": "2",
										"name": "root_mean_squared_error",
										"type": "double"
									},
									{
										"key": "3",
										"name": "R^2",
										"type": "double"
									},
									{
										"key": "4",
										"name": "mean_absolute_error",
										"type": "double"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"1"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/b9cc7c61-65db-4596-83ca-48733c95aa1c/resourceGroups/SynapseAnalytics/providers/Microsoft.Synapse/workspaces/asademo001/bigDataPools/SampleSpark",
				"name": "SampleSpark",
				"type": "Spark",
				"endpoint": "https://asademo001.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SampleSpark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"source": [
					"# Boston house price prediction with Vowpal Wabbit, LightGBM and Spark MLlib\n",
					"\n",
					"This notebook shows how to build simple regression models by using \n",
					"[Vowpal Wabbit (VW)](https://github.com/VowpalWabbit/vowpal_wabbit) and \n",
					"[LightGBM](https://github.com/microsoft/LightGBM) with MMLSpark.\n",
					" We also compare the results with \n",
					" [Spark MLlib Linear Regression](https://spark.apache.org/docs/latest/ml-classification-regression.html#linear-regression)."
				]
			},
			{
				"cell_type": "code",
				"source": [
					"import math\n",
					"from matplotlib.colors import ListedColormap, Normalize\n",
					"from matplotlib.cm import get_cmap\n",
					"import matplotlib.pyplot as plt\n",
					"from mmlspark.train import ComputeModelStatistics\n",
					"from mmlspark.vw import VowpalWabbitRegressor, VowpalWabbitFeaturizer\n",
					"from mmlspark.lightgbm import LightGBMRegressor\n",
					"import numpy as np\n",
					"import pandas as pd\n",
					"from pyspark.ml.feature import VectorAssembler\n",
					"from pyspark.ml.regression import LinearRegression\n",
					"from sklearn.datasets import load_boston"
				],
				"execution_count": 1
			},
			{
				"cell_type": "markdown",
				"source": [
					"## Prepare Dataset\n",
					"We use [*Boston house price* dataset](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_boston.html) \n",
					". \n",
					"The data was collected in 1978 from Boston area and consists of 506 entries with 14 features including the value of homes. \n",
					"We use `sklearn.datasets` module to download it easily, then split the set into training and testing by 75/25."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"boston = load_boston()\n",
					"\n",
					"feature_cols = ['f' + str(i) for i in range(boston.data.shape[1])]\n",
					"header = ['target'] + feature_cols\n",
					"df = spark.createDataFrame(\n",
					"    pd.DataFrame(data=np.column_stack((boston.target, boston.data)), columns=header)\n",
					").repartition(1)\n",
					"print(\"Dataframe has {} rows\".format(df.count()))\n",
					"display(df.limit(10).toPandas())"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"source": [
					"train_data, test_data = df.randomSplit([0.75, 0.25], seed=42)\n",
					"train_data.cache()\n",
					"test_data.cache()"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"source": [
					"Following is the summary of the training set."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"display(train_data.summary().toPandas())"
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"source": [
					"Plot feature distributions over different target values (house prices in our case)."
				]
			},
			{
				"cell_type": "code",
				"source": [
					"features = train_data.columns[1:]\n",
					"values = train_data.drop('target').toPandas()\n",
					"ncols = 5\n",
					"nrows = math.ceil(len(features) / ncols)\n",
					"\n",
					"yy = [r['target'] for r in train_data.select('target').collect()]\n",
					"\n",
					"f, axes = plt.subplots(nrows, ncols, sharey=True, figsize=(30,10))\n",
					"f.tight_layout()\n",
					"\n",
					"for irow in range(nrows):\n",
					"    axes[irow][0].set_ylabel('target')\n",
					"    for icol in range(ncols):\n",
					"        try:\n",
					"            feat = features[irow*ncols + icol]\n",
					"            xx = values[feat]\n",
					"\n",
					"            axes[irow][icol].scatter(xx, yy, s=10, alpha=0.25)\n",
					"            axes[irow][icol].set_xlabel(feat)\n",
					"            axes[irow][icol].get_yaxis().set_ticks([])\n",
					"        except IndexError:\n",
					"            f.delaxes(axes[irow][icol])"
				],
				"execution_count": 5
			},
			{
				"cell_type": "markdown",
				"source": [
					"## Baseline - Spark MLlib Linear Regressor\n",
					"\n",
					"First, we set a baseline performance by using Linear Regressor in Spark MLlib."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"featurizer = VectorAssembler(\n",
					"    inputCols=feature_cols,\n",
					"    outputCol='features'\n",
					")\n",
					"lr_train_data = featurizer.transform(train_data)['target', 'features']\n",
					"lr_test_data = featurizer.transform(test_data)['target', 'features']\n",
					"display(lr_train_data.limit(10).toPandas())"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"# By default, `maxIter` is 100. Other params you may want to change include: `regParam`, `elasticNetParam`, etc.\n",
					"lr = LinearRegression(\n",
					"    labelCol='target',\n",
					")\n",
					"\n",
					"lr_model = lr.fit(lr_train_data)\n",
					"lr_predictions = lr_model.transform(lr_test_data)\n",
					"\n",
					"display(lr_predictions.limit(10).toPandas())"
				],
				"execution_count": 7
			},
			{
				"cell_type": "markdown",
				"source": [
					"We evaluate the prediction result by using `mmlspark.train.ComputeModelStatistics` which returns four metrics:\n",
					"* [MSE (Mean Squared Error)](https://en.wikipedia.org/wiki/Mean_squared_error)\n",
					"* [RMSE (Root Mean Squared Error)](https://en.wikipedia.org/wiki/Root-mean-square_deviation) = sqrt(MSE)\n",
					"* [R quared](https://en.wikipedia.org/wiki/Coefficient_of_determination)\n",
					"* [MAE (Mean Absolute Error)](https://en.wikipedia.org/wiki/Mean_absolute_error)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"metrics = ComputeModelStatistics(\n",
					"    evaluationMetric='regression',\n",
					"    labelCol='target',\n",
					"    scoresCol='prediction'\n",
					").transform(lr_predictions)\n",
					"\n",
					"results = metrics.toPandas()\n",
					"results.insert(0, 'model', ['Spark MLlib - Linear Regression'])\n",
					"display(results)"
				],
				"execution_count": 8
			},
			{
				"cell_type": "markdown",
				"source": [
					"## Vowpal Wabbit"
				]
			},
			{
				"cell_type": "markdown",
				"source": [
					"Perform VW-style feature hashing. Many types (numbers, string, bool, map of string to (number, string)) are supported."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"vw_featurizer = VowpalWabbitFeaturizer(\n",
					"    inputCols=feature_cols,\n",
					"    outputCol='features',\n",
					")\n",
					"vw_train_data = vw_featurizer.transform(train_data)['target', 'features']\n",
					"vw_test_data = vw_featurizer.transform(test_data)['target', 'features']\n",
					"display(vw_train_data.limit(10).toPandas())"
				],
				"execution_count": 9
			},
			{
				"cell_type": "markdown",
				"source": [
					"See [VW wiki](https://github.com/vowpalWabbit/vowpal_wabbit/wiki/Command-Line-Arguments) for command line arguments."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"# Use the same number of iterations as Spark MLlib's Linear Regression (=100)\n",
					"args = \"--holdout_off --loss_function quantile -l 7 -q :: --power_t 0.3\"\n",
					"vwr = VowpalWabbitRegressor(\n",
					"    labelCol='target',\n",
					"    args=args,\n",
					"    numPasses=100,\n",
					")\n",
					"\n",
					"# To reduce number of partitions (which will effect performance), use `vw_train_data.repartition(1)`\n",
					"vw_train_data_2 = vw_train_data.repartition(1).cache()\n",
					"print(vw_train_data_2.count())\n",
					"vw_model = vwr.fit(vw_train_data_2.repartition(1))\n",
					"vw_predictions = vw_model.transform(vw_test_data)\n",
					"\n",
					"display(vw_predictions.limit(10).toPandas())"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"metrics = ComputeModelStatistics(\n",
					"    evaluationMetric='regression',\n",
					"    labelCol='target',\n",
					"    scoresCol='prediction'\n",
					").transform(vw_predictions)\n",
					"\n",
					"vw_result = metrics.toPandas()\n",
					"vw_result.insert(0, 'model', ['Vowpal Wabbit'])\n",
					"results = results.append(\n",
					"    vw_result,\n",
					"    ignore_index=True\n",
					")\n",
					"display(results)"
				],
				"execution_count": 11
			},
			{
				"cell_type": "markdown",
				"source": [
					"## LightGBM"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"lgr = LightGBMRegressor(\n",
					"    objective='quantile',\n",
					"    alpha=0.2,\n",
					"    learningRate=0.3,\n",
					"    numLeaves=31,\n",
					"    labelCol='target',\n",
					"    numIterations=100,\n",
					")\n",
					"\n",
					"# Using one partition since the training dataset is very small\n",
					"repartitioned_data = lr_train_data.repartition(1).cache()\n",
					"print(repartitioned_data.count())\n",
					"lg_model = lgr.fit(repartitioned_data)\n",
					"lg_predictions = lg_model.transform(lr_test_data)\n",
					"\n",
					"display(lg_predictions.limit(10).toPandas())"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"metrics = ComputeModelStatistics(\n",
					"    evaluationMetric='regression',\n",
					"    labelCol='target',\n",
					"    scoresCol='prediction'\n",
					").transform(lg_predictions)\n",
					"\n",
					"lg_result = metrics.toPandas()\n",
					"lg_result.insert(0, 'model', ['LightGBM'])\n",
					"results = results.append(\n",
					"    lg_result,\n",
					"    ignore_index=True\n",
					")\n",
					"display(results)"
				],
				"execution_count": 13
			},
			{
				"cell_type": "markdown",
				"source": [
					"Following figure shows the actual-vs.-prediction graphs of the results:\n",
					"\n",
					"<img width=\"1102\" alt=\"lr-vw-lg\" src=\"https://user-images.githubusercontent.com/42475935/64071975-4c3e9600-cc54-11e9-8b1f-9a1ee300f445.png\">"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"cmap = get_cmap('YlOrRd')\n",
					"\n",
					"target = np.array(test_data.select('target').collect()).flatten()\n",
					"model_preds = [\n",
					"    (\"Spark MLlib Linear Regression\", lr_predictions),\n",
					"    (\"Vowpal Wabbit\", vw_predictions),\n",
					"    (\"LightGBM\", lg_predictions)\n",
					"]"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"f, axes = plt.subplots(1, len(model_preds), sharey=True, figsize=(18, 6))\r\n",
					"f.tight_layout()\r\n",
					"\r\n",
					"for i, (model_name, preds) in enumerate(model_preds):\r\n",
					"    preds = np.array(preds.select('prediction').collect()).flatten()\r\n",
					"    err = np.absolute(preds - target)\r\n",
					"\r\n",
					"    norm = Normalize()\r\n",
					"    clrs = cmap(np.asarray(norm(err)))[:, :-1]\r\n",
					"    axes[i].scatter(preds, target, s=60, c=clrs, edgecolors='#888888', alpha=0.75)\r\n",
					"    axes[i].plot((0, 60), (0, 60), linestyle='--', color='#888888')\r\n",
					"    axes[i].set_xlabel('Predicted values')\r\n",
					"    if i ==0:\r\n",
					"        axes[i].set_ylabel('Actual values')\r\n",
					"    axes[i].set_title(model_name)\r\n",
					"plt.show()"
				],
				"execution_count": 15
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Clean up resources\r\n",
					"To ensure the Spark instance is shut down, end any connected sessions(notebooks). The pool shuts down when the **idle time** specified in the Apache Spark pool is reached. You can also select **stop session** from the status bar at the upper right of the notebook.\r\n",
					"\r\n",
					"![stopsession](https://adsnotebookrelease.blob.core.windows.net/adsnotebookrelease/adsnotebook/image/stopsession.png)"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Next steps\r\n",
					"\r\n",
					"* [Check out Synapse sample notebooks](https://github.com/Azure-Samples/Synapse/tree/main/MachineLearning) \r\n",
					"* [MMLSpark GitHub Repo](https://github.com/Azure/mmlspark)"
				]
			}
		]
	}
}